// Code generated by the multiversx-sc multi-contract system. DO NOT EDIT.

////////////////////////////////////////////////////
////////////////// AUTO-GENERATED //////////////////
////////////////////////////////////////////////////

// Init:                                 1
// Endpoints:                           25
// Async Callback:                       1
// Total number of exported functions:  27

#![no_std]

// Configuration that works with rustc < 1.73.0.
// TODO: Recommended rustc version: 1.73.0 or newer.
#![feature(lang_items)]

multiversx_sc_wasm_adapter::allocator!();
multiversx_sc_wasm_adapter::panic_handler!();

multiversx_sc_wasm_adapter::endpoints! {
    token_manager_mint_burn
    (
        init => init
        interchainTransfer => interchain_transfer
        callContractWithInterchainToken => call_contract_with_interchain_token
        giveToken => give_token
        takeToken => take_token
        deployInterchainToken => deploy_interchain_token
        mint => mint
        burn => burn
        implementationType => implementation_type
        params => params
        addFlowLimiter => add_flow_limiter
        removeFlowLimiter => remove_flow_limiter
        setFlowLimit => set_flow_limit
        tokenId => interchain_token_id
        tokenIdentifier => token_identifier
        flowOutAmount => get_flow_out_amount
        flowInAmount => get_flow_in_amount
        getFlowLimit => flow_limit
        transferOperatorship => transfer_operatorship
        proposeOperatorship => propose_operatorship
        acceptOperatorship => accept_operatorship
        getAccountRoles => account_roles
        getProposedRoles => proposed_roles
        transferDistributorship => transfer_distributorship
        proposeDistributorship => propose_distributorship
        acceptDistributorship => accept_distributorship
    )
}

multiversx_sc_wasm_adapter::async_callback! { token_manager_mint_burn }
